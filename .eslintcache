[{"/Users/goncalomarques/Desktop/project-3/app-client/src/App.js":"1","/Users/goncalomarques/Desktop/project-3/app-client/src/utils/auth.js":"2","/Users/goncalomarques/Desktop/project-3/app-client/src/components/Profile.js":"3","/Users/goncalomarques/Desktop/project-3/app-client/src/utils/user.js":"4","/Users/goncalomarques/Desktop/project-3/app-client/src/components/UsersProfile.js":"5","/Users/goncalomarques/Desktop/project-3/app-client/src/reportWebVitals.js":"6","/Users/goncalomarques/Desktop/project-3/app-client/src/components/Home.js":"7","/Users/goncalomarques/Desktop/project-3/app-client/src/components/Dashboard.js":"8","/Users/goncalomarques/Desktop/project-3/app-client/src/components/NavDrawer.js":"9","/Users/goncalomarques/Desktop/project-3/app-client/src/index.js":"10","/Users/goncalomarques/Desktop/project-3/app-client/src/components/auth/Signup.js":"11"},{"size":2143,"mtime":1607199794674,"results":"12","hashOfConfig":"13"},{"size":547,"mtime":1607016260149,"results":"14","hashOfConfig":"13"},{"size":8409,"mtime":1607252243541,"results":"15","hashOfConfig":"13"},{"size":593,"mtime":1607100159965,"results":"16","hashOfConfig":"13"},{"size":6251,"mtime":1607251911323,"results":"17","hashOfConfig":"13"},{"size":362,"mtime":1606929178015,"results":"18","hashOfConfig":"13"},{"size":1898,"mtime":1607034410917,"results":"19","hashOfConfig":"13"},{"size":5120,"mtime":1607251356053,"results":"20","hashOfConfig":"13"},{"size":5301,"mtime":1607247932976,"results":"21","hashOfConfig":"13"},{"size":592,"mtime":1606996772481,"results":"22","hashOfConfig":"13"},{"size":3015,"mtime":1607075626917,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"63z45w",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/goncalomarques/Desktop/project-3/app-client/src/App.js",[],["50","51"],"/Users/goncalomarques/Desktop/project-3/app-client/src/utils/auth.js",[],"/Users/goncalomarques/Desktop/project-3/app-client/src/components/Profile.js",["52","53"],"/Users/goncalomarques/Desktop/project-3/app-client/src/utils/user.js",[],"/Users/goncalomarques/Desktop/project-3/app-client/src/components/UsersProfile.js",["54","55","56"],"/Users/goncalomarques/Desktop/project-3/app-client/src/reportWebVitals.js",[],["57","58"],"/Users/goncalomarques/Desktop/project-3/app-client/src/components/Home.js",[],"/Users/goncalomarques/Desktop/project-3/app-client/src/components/Dashboard.js",["59","60","61","62","63","64","65","66"],"import React from 'react';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport NavDrawer from './NavDrawer';\nimport Profile from \"./Profile\"\nimport PostsService from '../utils/posts'\nimport { toast } from 'react-toastify';\nimport UserService from '../utils/user';\nimport { TextField, Button, Typography, Fab, Avatar } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport AddIcon from '@material-ui/icons/Add';\nimport './post.css';\n\nclass Dashboard extends React.Component {\n    state = {\n        content: \"\",\n        posts: [],\n        username: \"\",\n        connections: []\n    }\n\n    getAllPosts = () => {\n        const loggedInUserId = localStorage.getItem(\"loggedInUser\")\n        const postsService = new PostsService();\n        const postsPromise = postsService.getAllPosts();\n        const userService = new UserService()\n        let userPromise = userService.getUser(loggedInUserId);\n        Promise.all([userPromise, postsPromise]).then((values) => {\n            let {\n                username,\n                connections,\n            } = values[0].data;\n            let allPosts = values[1].data;\n\n            const promisesUserPosts = [];\n            allPosts.forEach((post) => {\n                promisesUserPosts.push(userService.getUser(post.user))\n            });\n\n            Promise.all(promisesUserPosts).then((response) => {\n                response.forEach((user, index) => {\n                    allPosts[index].username = user.data.username;\n                });\n\n                this.setState({\n                    username: username,\n                    connections: connections,\n                    posts: allPosts,\n                });\n\n            })\n        })\n    }\n\n\n    componentDidMount = () => {\n        this.getAllPosts()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.content === this.state.content) {\n            return;\n        } else {\n            console.log(`prevState: ${prevState}`)\n            this.getAllPosts();\n        }\n    }\n\n    handleChange = (e) => {\n        let { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        let postService = new PostsService();\n        postService.createPost(this.state).then(() => {\n            this.setState({\n                content: ''\n            })\n            toast.success('Post created!!')\n        });\n    }\n\n    render() {\n        return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n                <Card style={{ width: '40%', marginBottom: 40 }}>\n                    <CardContent >\n                        <form onSubmit={this.handleFormSubmit} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-evenly' }}>\n                            <TextField label=\"Post\" multiline rows={2} variant='outlined' type=\"text\" name=\"content\" style={{ width: '70%' }}\n                                value={this.state.content}\n                                onChange={this.handleChange}\n                            />\n                            <Button type='submit'><Fab style={{ backgroundColor: 'lightblue' }} aria-label=\"add\">\n                                <AddIcon />\n                            </Fab></Button>\n\n                        </form>\n                    </CardContent>\n                </Card>\n                <hr />\n                <div style={{ width: '40%', marginBottom: 40 }}>\n                    {this.state.posts.map(post => {\n                        if (this.state.connections.includes(post.user) || post.user === localStorage.getItem(\"loggedInUser\") || !this.state.connections.length) {\n                            return (\n                                <Card style={{ marginBottom: 30 }}>\n                                    <CardContent className='profile-section'>\n                                        <div className='avatar-section'>\n                                            <Avatar style={{ height: 70, width: 70 }} />\n                                            <Typography variant='h5' color='primary' style={{ marginTop: '20%' }}>{post.username}</Typography>\n                                        </div>\n                                        <div className='info-section'>\n                                            <Typography style={{ height: 20, margin: 0, padding: 0 }}>{post.content}</Typography>\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            )\n                        } else {\n                            return null;\n                        }\n                    })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;\n","/Users/goncalomarques/Desktop/project-3/app-client/src/components/NavDrawer.js",["67"],"/Users/goncalomarques/Desktop/project-3/app-client/src/index.js",[],["68","69"],"/Users/goncalomarques/Desktop/project-3/app-client/src/components/auth/Signup.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","replacedBy":"82"},{"ruleId":"75","severity":1,"message":"83","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"84","line":2,"column":19,"nodeType":"77","messageId":"78","endLine":2,"endColumn":25},{"ruleId":"75","severity":1,"message":"85","line":2,"column":27,"nodeType":"77","messageId":"78","endLine":2,"endColumn":32},{"ruleId":"75","severity":1,"message":"86","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":17},{"ruleId":"75","severity":1,"message":"87","line":4,"column":8,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":10,"column":8,"nodeType":"77","messageId":"78","endLine":10,"endColumn":22},{"ruleId":"75","severity":1,"message":"79","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":19},{"ruleId":"75","severity":1,"message":"80","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":17},{"ruleId":"75","severity":1,"message":"88","line":2,"column":19,"nodeType":"77","messageId":"78","endLine":2,"endColumn":27},{"ruleId":"71","replacedBy":"89"},{"ruleId":"73","replacedBy":"90"},{"ruleId":"75","severity":1,"message":"91","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'CardActionArea' is defined but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'CardMedia' is defined but never used.",["92"],["93"],"'NavLink' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'NavDrawer' is defined but never used.","'Profile' is defined but never used.","'Redirect' is defined but never used.",["92"],["93"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]